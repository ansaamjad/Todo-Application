{"version":3,"sources":["Context.js","components/Form.js","components/List.js","Reducer.js","App.js","index.js"],"names":["Store","React","createContext","todos","Form","dispatch","useContext","useState","todo","setTodo","handleTodoAdd","type","payload","className","value","autoFocus","placeholder","onKeyUp","event","keyCode","onChange","console","log","target","onClick","List","state","map","t","key","style","marginLeft","Reducer","action","includes","filter","App","globalStore","useReducer","reducer","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAUeA,EARFC,IAAMC,cAAc,CAC7BC,MAAO,CACH,MACA,QACA,aCuCOC,MA3Cf,WAAgB,IACLC,EAAUC,qBAAWN,GAArBK,SADI,EAGUE,mBAAS,IAHnB,mBAGNC,EAHM,KAGDC,EAHC,KAUX,SAASC,IACLL,EAAS,CAACM,KAAK,WAAWC,QAAQJ,IAClCC,EAAQ,IAQZ,OACI,yBAAKI,UAAU,OACb,yBAAKA,UAAU,aACb,6BACA,yBAAKA,UAAU,eACb,2BACEA,UAAU,eACVC,MAAON,EACPO,WAAW,EACXC,YAAY,iBACZC,QAfZ,SAA0BC,GAEH,KAAhBA,EAAMC,SAAcT,KAcfU,SA1BZ,SAA0BF,GACtBG,QAAQC,IAAI,QAAQJ,GACpBT,EAAQS,EAAMK,OAAOT,UA0Bf,yBAAKD,UAAU,sBACb,4BAAQA,UAAU,kBAAkBW,QAASd,GAA7C,YCIDe,MAnCd,WAAiB,IAAD,EACanB,qBAAWN,GAA/B0B,EADO,EACPA,MAAOrB,EADA,EACAA,SAGf,OACE,yBAAKQ,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,+BAIJ,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,eACXa,EAAMvB,MAAMwB,KAAI,SAAAC,GAAC,OAChB,wBAAIC,IAAKD,EAAGf,UAAU,mBACrB,4BAAKe,GACJ,4BACEf,UAAU,oCACViB,MAAO,CAAEC,WAAY,IACrBP,QAAS,kBAAMnB,EAAS,CAAEM,KAAM,WAAYC,QAASgB,MAHvD,sB,sBCAHI,MAxBf,SAAiBN,EAAOO,GACpB,OAAQA,EAAOtB,MACX,IAAK,WACD,OAAKsB,EAAOrB,QAGRc,EAAMvB,MAAM+B,SAASD,EAAOrB,SACrBc,EAEJ,2BACAA,GADP,IAEIvB,MAAM,GAAD,mBAAMuB,EAAMvB,OAAZ,CAAmB8B,EAAOrB,YAPxBc,EASX,IAAK,WACD,OAAO,2BACAA,GADP,IAEIvB,MAAOuB,EAAMvB,MAAMgC,QAAO,SAAAP,GAAC,OAAIA,IAAMK,EAAOrB,aAGhD,QACI,OAAOc,ICQVU,MAhBjB,WAEI,IAAMC,EAAc/B,qBAAWN,GAFpB,EAKesC,qBAAWC,EAASF,GALnC,mBAKJX,EALI,KAKGrB,EALH,KAQX,OAEE,kBAAC,EAAMmC,SAAP,CAAgB1B,MAAO,CAAEY,QAAOrB,aAC9B,kBAAE,EAAF,MACA,kBAAE,EAAF,QCpBRoC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.044aa1b1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Store =React.createContext({\r\n    todos: [\r\n        'SRS',\r\n        'React',\r\n        'Subject'\r\n    ]\r\n})\r\n\r\nexport default Store;","import React, { useState, useContext } from 'react';\r\nimport Store from '../Context';\r\nfunction Form(){\r\n    const {dispatch}=useContext(Store);\r\n\r\n    let [todo,setTodo] = useState(\"\");\r\n\r\n    function handleTodoChange(event){\r\n        console.log(\"event\",event)\r\n        setTodo(event.target.value);\r\n    }\r\n\r\n    function handleTodoAdd(){\r\n        dispatch({type:'ADD_TODO',payload:todo});\r\n        setTodo(\"\");\r\n    }\r\n\r\n    function handleSubmitForm(event){\r\n        // console.log(\"event\",ev);\r\n        if(event.keyCode===13) handleTodoAdd();\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n          <div className=\"col-md-10\">\r\n            <br />\r\n            <div className=\"input-group\">\r\n              <input\r\n                className=\"form-control\"\r\n                value={todo}\r\n                autoFocus={true}\r\n                placeholder=\"Enter new todo\"\r\n                onKeyUp={handleSubmitForm}\r\n                onChange={handleTodoChange}\r\n              />\r\n              <div className=\"input-group-append\">\r\n                <button className=\"btn btn-primary\" onClick={handleTodoAdd}>\r\n                  Add\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n}\r\nexport default Form;","import React, { useContext } from \"react\";\r\nimport Store from \"../Context\";\r\nimport Header  from \"./Header\";\r\n\r\n\r\n function List() {\r\n  const { state, dispatch } = useContext(Store);\r\n\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-12\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <br />\r\n            \r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <ul className=\"input-group\">\r\n              {state.todos.map(t => (\r\n                <li key={t} className=\"list-group-item\">\r\n                 <h1>{t}</h1> \r\n                  <button\r\n                    className=\"float-right btn btn-danger btn-sm\"\r\n                    style={{ marginLeft: 10 }}\r\n                    onClick={() => dispatch({ type: \"COMPLETE\", payload: t })}\r\n                  >\r\n                    Complete\r\n                  </button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default List;","function Reducer(state, action) {\r\n    switch (action.type) {\r\n        case \"ADD_TODO\":\r\n            if (!action.payload) {\r\n                return state;\r\n            }\r\n            if (state.todos.includes(action.payload)) {\r\n                return state;\r\n            }\r\n            return {\r\n                ...state,\r\n                todos: [...state.todos, action.payload]\r\n            }\r\n            case \"COMPLETE\":\r\n                return {\r\n                    ...state,\r\n                    todos: state.todos.filter(t => t !== action.payload)\r\n                }\r\n\r\n                default:\r\n                    return state;\r\n\r\n    }\r\n}\r\nexport default Reducer;","import React, {    useReducer,    useContext} from 'react';\r\nimport Form from './components/Form';\r\nimport List from './components/List';\r\nimport Appp from './App.css';\r\n// import Header from './components/Header';\r\n\r\nimport Store from './Context';\r\nimport reducer from './Reducer';\r\n\r\n//import {// usePersistedContext,\r\n   // usePersistedReducer} from './usePersist';\r\n\r\nfunction App() {\r\n    // create a global store to store the state\r\n    const globalStore = useContext(Store);//usePersistedContext(useContext(Store), \"state\");\r\n  \r\n    // `todo s` will be a state manager to manage state.\r\n    const [state, dispatch] = useReducer(reducer, globalStore);// usePersistedReducer(useReducer(reducer, globalStore),\"state\" );// The localStorage key\r\n    \r\n  \r\n    return (\r\n      // State.Provider passes the state and dispatcher to the down\r\n      <Store.Provider value={{ state, dispatch }}>\r\n        < Form />\r\n        < List />\r\n      </Store.Provider>\r\n    );\r\n  }\r\n  export default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}